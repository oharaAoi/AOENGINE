#include "BossBarrier.h"

BossBarrier::BossBarrier() {}
BossBarrier::~BossBarrier() {}


void BossBarrier::Finalize() {}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　初期化処理
//////////////////////////////////////////////////////////////////////////////////////////////////

void BossBarrier::Init() {
	BaseGameObject::Init();
	SetObject("barrier.obj");
	SetColor(Vector4(1.0f, 1.0f, 1.0f, 0.5f));

	SetMeshCollider("boss_barrier");
	meshCollider_->SetCollisionEnter([this](MeshCollider& other) {OnCollisionEnter(other); });
	meshCollider_->SetCollisionStay([this](MeshCollider& other) {OnCollisionStay(other); });
	meshCollider_->SetCollisionExit([this](MeshCollider& other) {OnCollisionExit(other); });
}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　更新処理
//////////////////////////////////////////////////////////////////////////////////////////////////

void BossBarrier::Update() {
	BaseGameObject::Update();
}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　描画処理
//////////////////////////////////////////////////////////////////////////////////////////////////

void BossBarrier::Draw() const {
	BaseGameObject::Draw();
}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　当たり判定処理
//////////////////////////////////////////////////////////////////////////////////////////////////

void BossBarrier::OnCollisionEnter([[maybe_unused]] MeshCollider& other) {
}

void BossBarrier::OnCollisionStay([[maybe_unused]] MeshCollider& other) {
}

void BossBarrier::OnCollisionExit([[maybe_unused]] MeshCollider& other) {
}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　Debug編集
//////////////////////////////////////////////////////////////////////////////////////////////////

#ifdef _DEBUG
void BossBarrier::Debug_Gui() {

}
void BossBarrier::Debug_Draw() {
	Engine::SetPipeline(PipelineType::PrimitivePipeline);
	meshCollider_->Draw();
}
#endif