#include "GameCore.h"
#include "Engine/Engine.h"

GameCore::GameCore() {}
GameCore::~GameCore() {}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　終了処理
//////////////////////////////////////////////////////////////////////////////////////////////////

void GameCore::Finalize() {
	sceneManger_->Finalize();
	AoiFramework::Finalize();
}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　初期化処理
//////////////////////////////////////////////////////////////////////////////////////////////////
void GameCore::Init() {
	AoiFramework::Init();

	// シーンの初期化
	sceneManger_ = std::make_unique<SceneManager>();
	sceneManger_->Init();
	sceneManger_->SetChange(SceneType::TITLE);

	isReset_ = false;
}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　更新処理
//////////////////////////////////////////////////////////////////////////////////////////////////

void GameCore::Update() {
	// リセットフラグが立っているのであればこのframe中は何もしない
	if (sceneManger_->CheckReset()) {
		isReset_ = true;
		return;
	}

	// sceneの更新
	sceneManger_->Update();
#ifdef _DEBUG
	sceneManger_->Debug_Gui();
#endif
}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　描画処理
//////////////////////////////////////////////////////////////////////////////////////////////////

void GameCore::Draw() {
	sceneManger_->Draw();
}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　frame開始処理
//////////////////////////////////////////////////////////////////////////////////////////////////

void GameCore::BeginFrame() {
	Engine::BeginFrame();
}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　frame終了処理
//////////////////////////////////////////////////////////////////////////////////////////////////

void GameCore::EndFrame() {
	// frameの最終処理を行う
	Engine::EndFrame();

	// sceneのリセットする場合は解放処理を行う
	if (isReset_) {
		sceneManger_->Free();
		isReset_ = false;
		return;
	}
	// fpsの計算
	gameTimer_.CalculationFrame();
}