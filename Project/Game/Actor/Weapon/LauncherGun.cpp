#include "LauncherGun.h"

void LauncherGun::Finalize() {
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 編集
///////////////////////////////////////////////////////////////////////////////////////////////
#ifdef _DEBUG
void LauncherGun::Debug_Gui() {
	transform_->Debug_Gui();
}
#endif // _DEBUG

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 初期化
///////////////////////////////////////////////////////////////////////////////////////////////

void LauncherGun::Init() {
	BaseWeapon::Init();
	SetObject("launcher.obj");
	SetName("LauncherGun");

	transform_->translate_ = { -1.2f, 1.1f, 0.0f };

	// -------------------------------------------------
	// ↓ Effect関連
	// -------------------------------------------------
	gunFireParticles_ = std::make_unique<GunFireParticles>();
	gunFireParticles_->Init("gunFireParticles");
	
#ifdef _DEBUG
	EditerWindows::AddObjectWindow(this, GetName());
#endif // _DEBUG
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 更新
///////////////////////////////////////////////////////////////////////////////////////////////

void LauncherGun::Update() {
	gunFireParticles_->Update(Render::GetCameraRotate());
	BaseWeapon::Update();
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 描画
///////////////////////////////////////////////////////////////////////////////////////////////

void LauncherGun::Draw() const {
	BaseWeapon::Draw();
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 弾を撃つ
///////////////////////////////////////////////////////////////////////////////////////////////
 
void LauncherGun::Shot() {
	Quaternion parentRotate = pParentObj_->GetTransform()->rotation_;
	Vector3 forward = parentRotate.MakeForward();
	pBulletManager_->AddBullet(worldPos_, forward * speed_);
	// effectを出す
	Vector3 pos = worldPos_;
	pos += (forward * 4.f);
	gunFireParticles_->SetPos(pos);
	gunFireParticles_->SetOnShot();

}