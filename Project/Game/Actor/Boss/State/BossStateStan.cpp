#include "BossStateStan.h"
#include "Game/Actor/Boss/Boss.h"
#include "Engine/Lib/Json/JsonItems.h"
#include "Game/Actor/Boss/State/BossStateNormal.h"
#include "Game/Actor/Boss/Action/BossActionIdle.h"

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 初期化処理
///////////////////////////////////////////////////////////////////////////////////////////////

void BossStateStan::OnStart() {
	SetName("StanState");

	stateTime_ = 0.0f;
	param_.FromJson(JsonItems::GetData(stateMachine_->GetName(), param_.GetName()));

	pOwner_->GetActionManager()->SetIsActionStop(true);
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 更新処理
///////////////////////////////////////////////////////////////////////////////////////////////

void BossStateStan::OnUpdate() {
	stateTime_ += GameTimer::DeltaTime();

	ApplyGravity();

	if (stateTime_ >= param_.fallTime) {
		stateMachine_->ChangeState<BossStateNormal>();
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 終了処理
///////////////////////////////////////////////////////////////////////////////////////////////

void BossStateStan::OnExit() {
	size_t hash = typeid(BossActionIdle).hash_code();
	pOwner_->GetActionManager()->ChangeAction(hash);
	pOwner_->GetActionManager()->SetIsActionStop(false);
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 編集
///////////////////////////////////////////////////////////////////////////////////////////////

void BossStateStan::Debug_Gui() {
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 重力の適応
///////////////////////////////////////////////////////////////////////////////////////////////

void BossStateStan::ApplyGravity() {
	if (stateTime_ >= param_.fallTime) { return; }

	velocity_ += acceleration_ * GameTimer::DeltaTime();
	pOwner_->GetTransform()->translate_ += velocity_ * GameTimer::DeltaTime();
}