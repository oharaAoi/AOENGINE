#include "BossBulletManager.h"
#include "Game/Actor/Boss/Bullet/BossMissile.h"

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 初期化する
///////////////////////////////////////////////////////////////////////////////////////////////

void BossBulletManager::Init() {
	bulletList_.clear();
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 更新する
///////////////////////////////////////////////////////////////////////////////////////////////

void BossBulletManager::Update() {
	// フラグがfalseになったら削除
	std::erase_if(bulletList_, [](const BaseBullet& bullet) {
		return !bullet.GetIsAlive();
				  });

	for (auto& bullet : bulletList_) {
		bullet->Update();
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 描画する
///////////////////////////////////////////////////////////////////////////////////////////////

void BossBulletManager::Draw() const {
	for (auto& bullet : bulletList_) {
		bullet->Draw();
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 弾を追加する
///////////////////////////////////////////////////////////////////////////////////////////////

void BossBulletManager::AddBullet(const Vector3& pos, const Vector3& velocity, BossBulletType type) {
	switch (type) {
	case BossBulletType::MISSILE:
		auto& bullet = bulletList_.emplace_back(std::make_unique<BossMissile>());
		bullet->Init();
		bullet->Reset(pos, velocity);
		break;
	default:
		break;
	}
}
