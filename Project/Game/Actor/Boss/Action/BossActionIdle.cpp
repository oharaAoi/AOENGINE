#include "BossActionIdle.h"
#include "Game/Actor/Boss/Boss.h"
#include "Engine/Lib/GameTimer.h"
#include "Engine/Lib/Math/MyRandom.h"

void BossActionIdle::Debug_Gui() {
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 設定時のみ行う処理
///////////////////////////////////////////////////////////////////////////////////////////////

void BossActionIdle::Build() {
	SetName("actionIdle");
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 初期化処理
///////////////////////////////////////////////////////////////////////////////////////////////

void BossActionIdle::OnStart() {
	actionTimer_ = 0;

	playerToRotate_ = Quaternion::LookAt(pOwner_->GetPosition(), pOwner_->GetPlayerPosition());
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 更新処理
///////////////////////////////////////////////////////////////////////////////////////////////

void BossActionIdle::OnUpdate() {
	actionTimer_ += GameTimer::DeltaTime();

	playerToRotate_ = Quaternion::LookAt(pOwner_->GetPosition(), pOwner_->GetPlayerPosition());
	pOwner_->GetTransform()->rotation_ = Quaternion::Slerp(pOwner_->GetTransform()->rotation_, playerToRotate_, 0.05f);
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 終了処理
///////////////////////////////////////////////////////////////////////////////////////////////

void BossActionIdle::OnEnd() {
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 次のアクションのチェック
///////////////////////////////////////////////////////////////////////////////////////////////

void BossActionIdle::CheckNextAction() {
	if (actionTimer_ > 1.0f) {
		size_t hash = pOwner_->GetAI()->MoveActionAI(pOwner_->GetTransform(), pOwner_->GetPlayerPosition());
		NextAction(hash);
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 入力処理
///////////////////////////////////////////////////////////////////////////////////////////////

bool BossActionIdle::IsInput() {
	return false;
}
