#include "BossActionLeave.h"
#include "Engine/Lib/Json/JsonItems.h"
#include "Game/Actor/Boss/Boss.h"
#include "Game/Actor/Boss/Action/BossActionIdle.h"

void BossActionLeave::Debug_Gui() {
	ImGui::DragFloat("moveSpeed", &param_.moveSpeed, 0.1f);
	ImGui::DragFloat("moveTime", &param_.moveTime, 0.1f);

	if (ImGui::Button("Save")) {
		JsonItems::Save(pManager_->GetName(), param_.ToJson(param_.GetName()));
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 設定時のみ行う処理
///////////////////////////////////////////////////////////////////////////////////////////////

void BossActionLeave::Build() {
	SetName("actionLeave");
	param_.FromJson(JsonItems::GetData(pManager_->GetName(), param_.GetName()));
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 初期化処理
///////////////////////////////////////////////////////////////////////////////////////////////

void BossActionLeave::OnStart() {
	actionTimer_ = 0;

	accel_ = pOwner_->GetTransform()->rotation_.MakeForward();
	velocity_ = CVector3::ZERO;
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 更新処理
///////////////////////////////////////////////////////////////////////////////////////////////

void BossActionLeave::OnUpdate() {
	actionTimer_ += GameTimer::DeltaTime();

	Leave();
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 終了処理
///////////////////////////////////////////////////////////////////////////////////////////////

void BossActionLeave::OnEnd() {
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 次のアクションのチェック
///////////////////////////////////////////////////////////////////////////////////////////////

void BossActionLeave::CheckNextAction() {
	if (actionTimer_ > param_.moveTime) {
		NextAction<BossActionIdle>();
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 入力処理
///////////////////////////////////////////////////////////////////////////////////////////////

bool BossActionLeave::IsInput() {
	return false;
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 離れる処理
///////////////////////////////////////////////////////////////////////////////////////////////

void BossActionLeave::Leave() {
	velocity_ += accel_ * GameTimer::DeltaTime();
	pOwner_->GetTransform()->MoveVelocity(velocity_ * param_.moveSpeed * GameTimer::DeltaTime(), 0.1f);
}