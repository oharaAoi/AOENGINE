#include "PlayerActionDamaged.h"
#include "Game/Actor/Player/Player.h"

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 設定時のみ行う処理
///////////////////////////////////////////////////////////////////////////////////////////////

void PlayerActionDamaged::Build() {
	SetName("actionDamaged");
	pOwnerTransform_ = pOwner_->GetTransform();
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 初期化
///////////////////////////////////////////////////////////////////////////////////////////////

void PlayerActionDamaged::OnStart() {
	actionTimer_ += GameTimer::DeltaTime();

	pOwner_->GetJetEngine()->JetIsStop();
	pOwner_->GetGameObject()->GetRigidbody()->SetGravity(true);
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 更新
///////////////////////////////////////////////////////////////////////////////////////////////

void PlayerActionDamaged::OnUpdate() {
	
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 終了
//////////////////////////////////////////////////////////////////////////////////////////////

void PlayerActionDamaged::OnEnd() {
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 次に行うアクションの判定
//////////////////////////////////////////////////////////////////////////////////////////////

void PlayerActionDamaged::CheckNextAction() {
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 入力処理
///////////////////////////////////////////////////////////////////////////////////////////////

bool PlayerActionDamaged::IsInput() {
	return false;
}
